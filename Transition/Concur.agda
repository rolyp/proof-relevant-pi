module Transition.Concur where

   open import SharedModules hiding ([_])
   open import Ext

   open import Action as แดฌ
      using (Action; Actionแต; Actionแถ; _แต; _แถ; inc); open แดฌ.Actionแต; open แดฌ.Actionแถ
   open import Action.Concur using (_แดฌโฃ_; module _แดฌโฃ_; แดฌโฃ-sym; แดฌโฃ-sym-involutive; แดฌโ); open _แดฌโฃ_
   import Action.Ren
   open import Name as แดบ using (Name; Cxt; module Cxt; zero; _+_)
   open import Ren as แดฟ using (Ren; Renameable; แดบren; suc; push; pop; swap); open แดฟ.Renameable โฆ...โฆ
   open import Ren.Properties
   open import Proc as แดพ using (Proc); open แดพ.Proc
   import Proc.Ren
   open import Transition as แต using (_โ[_-_]โ_; target); open แต._โ[_-_]โ_
   open import Transition.Ren using (_*แต; _*แถ)

   -- Whether two coinitial evaluation contexts are concurrent; define asymmetrically and then close under symmetry.
   -- This is _not_ the "symmetric reduction" of the symmetric version; when proving preservation of concurrency
   -- by residuation, it's useful to include the symmetrisation of some rules in this definition. In particular
   -- the โแถแต, แถแตโ, โโขแตฅ and ฮฝแถแต cases are all implied by symmetry, but still defined here. TODO: cases for โขโ and แตฅโ.
   syntax Concurโ E Eโฒ aโฒ/a = E โฃโ[ aโฒ/a ] Eโฒ
   infix 4 Concurโ

   data Concurโ {ฮ} : โ {a aโฒ : Action ฮ} {P R Rโฒ} โ
                P โ[ a - _ ]โ R โ P โ[ aโฒ - _ ]โ Rโฒ โ a แดฌโฃ aโฒ โ Set where
      _แตโแต_ : โ {P Q R S} {a aโฒ : Actionแต ฮ}
             (E : P โ[ a แต - _ ]โ R) (F : Q โ[ aโฒ แต - _ ]โ S) โ E แตโ Q โฃโ[ แตโแต ] P โแต F
      _แตโแถ_ : โ {P Q R S} {a : Actionแต ฮ} {aโฒ : Actionแถ ฮ}
             (E : P โ[ a แต - _ ]โ R) (F : Q โ[ aโฒ แถ - _ ]โ S) โ E แตโ Q โฃโ[ แตโแถ ] P โแถ F
      _แถโแต_ : โ {P Q R S} {a : Actionแถ ฮ} {aโฒ : Actionแต ฮ}  โ
             (E : P โ[ a แถ - _ ]โ R) (F : Q โ[ aโฒ แต - _ ]โ S) โ E แถโ Q โฃโ[ แถโแต ] P โแต F
      _แถโแถ_ : โ {P Q R S} {a aโฒ : Actionแถ ฮ}  โ
             (E : P โ[ a แถ - _ ]โ R) (F : Q โ[ aโฒ แถ - _ ]โ S) โ E แถโ Q โฃโ[ แถโแถ ] P โแถ F
      -- โแตโข might be a better naming convention here, and similarly for โแตแตฅ.
      _โโขแต_ : โ {x y P R Rโฒ S Q} {a : Actionแต ฮ} {E : P โ[ a แต - _ ]โ R} {Eโฒ : P โ[ x โข แต - _ ]โ Rโฒ} โ
              E โฃโ[ แตโแต ] Eโฒ โ (F : Q โ[ โข x โฉ y โช แถ - _ ]โ S) โ E แตโ Q โฃโ[ แตโแถ ] Eโฒ โโข F
      _โโขแถ_ : โ {x y P R Rโฒ S Q} {a : Actionแถ ฮ} {E : P โ[ a แถ - _ ]โ R} {Eโฒ : P โ[ x โข แต - _ ]โ Rโฒ} โ
              E โฃโ[ แถโแต ] Eโฒ โ (F : Q โ[ โข x โฉ y โช แถ - _ ]โ S) โ E แถโ Q โฃโ[ แถโแถ ] Eโฒ โโข F
      _แตโโข_ : โ {x y P Q R S Sโฒ} {a : Actionแต ฮ} {F : Q โ[ a แต - _ ]โ S} {Fโฒ : Q โ[ โข x โฉ y โช แถ - _ ]โ Sโฒ}
              (E : P โ[ x โข แต - _ ]โ R) โ F โฃโ[ แตโแถ ] Fโฒ โ P โแต F โฃโ[ แตโแถ ] E โโข Fโฒ
      _แถโโข_ : โ {x y P Q R S Sโฒ} {a : Actionแถ ฮ} {F : Q โ[ a แถ - _ ]โ S} {Fโฒ : Q โ[ โข x โฉ y โช แถ - _ ]โ Sโฒ}
              (E : P โ[ x โข แต - _ ]โ R) โ F โฃโ[ แถโแถ ] Fโฒ โ P โแถ F โฃโ[ แถโแถ ] E โโข Fโฒ
      _โแตฅแต_ : โ {x P R Rโฒ S Q} {a : Actionแต ฮ} {E : P โ[ a แต - _ ]โ R} {Eโฒ : P โ[ x โข แต - _ ]โ Rโฒ} โ
             E โฃโ[ แตโแต ] Eโฒ โ (F : Q โ[ (โข x) แต - _ ]โ S) โ E แตโ Q โฃโ[ แตโแถ ] Eโฒ โแตฅ F
      _โแตฅแถ_ : โ {x P R Rโฒ S Q} {a : Actionแถ ฮ} {E : P โ[ a แถ - _ ]โ R} {Eโฒ : P โ[ x โข แต - _ ]โ Rโฒ} โ
              E โฃโ[ แถโแต ] Eโฒ โ (F : Q โ[ (โข x) แต - _ ]โ S) โ E แถโ Q โฃโ[ แถโแถ ] Eโฒ โแตฅ F
      _แตโแตฅ_ : โ {x P Q R S Sโฒ} {a : Actionแต ฮ} {๐} {F : Q โ[ a แต - _ ]โ S} {Fโฒ : Q โ[ (โข x) แต - _ ]โ Sโฒ} โ
             (E : P โ[ x โข แต - _ ]โ R) โ F โฃโ[ ๐ ] Fโฒ โ P โแต F โฃโ[ แตโแถ ] E โแตฅ Fโฒ
      _แถโแตฅ_ : โ {x P Q R S Sโฒ} {a : Actionแถ ฮ} {F : Q โ[ a แถ - _ ]โ S} {Fโฒ : Q โ[ (โข x) แต - _ ]โ Sโฒ} โ
             (E : P โ[ x โข แต - _ ]โ R) โ F โฃโ[ แถโแต ] Fโฒ โ P โแถ F โฃโ[ แถโแถ ] E โแตฅ Fโฒ
      _โโ_ : โ {P} {a : Action ฮ} {aโฒ : Action ฮ} {๐} {R Rโฒ} {E : P โ[ a - _ ]โ R} {Eโฒ : P โ[ aโฒ - _ ]โ Rโฒ} โ
             E โฃโ[ ๐ ] Eโฒ โ (Q : Proc ฮ) โ E โโ Q โฃโ[ ๐ ] Eโฒ โโ Q
      _โแตแต_ : โ {Q S Sโฒ} {a aโฒ : Actionแต ฮ} {๐} {F : Q โ[ a แต - _ ]โ S} {Fโฒ : Q โ[ aโฒ แต - _ ]โ Sโฒ} โ
             (P : Proc ฮ) โ F โฃโ[ ๐ ] Fโฒ โ P โแต F โฃโ[ ๐ ] P โแต Fโฒ
      _โแตแถ_ : โ {Q S Sโฒ} {a : Actionแต ฮ} {aโฒ : Actionแถ ฮ} {F : Q โ[ a แต - _ ]โ S} {Fโฒ : Q โ[ aโฒ แถ - _ ]โ Sโฒ} โ
             (P : Proc ฮ) โ F โฃโ[ แตโแถ ] Fโฒ โ P โแต F โฃโ[ แตโแถ ] P โแถ Fโฒ
      _โแถแต_ : โ {Q S Sโฒ} {a : Actionแถ ฮ} {aโฒ : Actionแต ฮ} {F : Q โ[ a แถ - _ ]โ S} {Fโฒ : Q โ[ aโฒ แต - _ ]โ Sโฒ} โ
             (P : Proc ฮ) โ F โฃโ[ แถโแต ] Fโฒ โ P โแถ F โฃโ[ แถโแต ] P โแต Fโฒ
      _โแถแถ_ : โ {Q S Sโฒ} {a aโฒ : Actionแถ ฮ} {F : Q โ[ a แถ - _ ]โ S} {Fโฒ : Q โ[ aโฒ แถ - _ ]โ Sโฒ} โ
             (P : Proc ฮ) โ F โฃโ[ แถโแถ ] Fโฒ โ P โแถ F โฃโ[ แถโแถ ] P โแถ Fโฒ
      _โแตแต_ : โ {Q S Sโฒ} {F : Q โ[ ฯ แถ - _ ]โ S} {Fโฒ : Q โ[ ฯ แถ - _ ]โ Sโฒ} โ
             (P : Proc ฮ) โ F โฃโ[ แตโแต ] Fโฒ โ P โแถ F โฃโ[ แตโแต ] P โแถ Fโฒ
      _แตแตโ_ : โ {P R Rโฒ} {a aโฒ : Actionแต ฮ} {๐} {E : P โ[ a แต - _ ]โ R} {Eโฒ : P โ[ aโฒ แต - _ ]โ Rโฒ} โ
              E โฃโ[ ๐ ] Eโฒ โ (Q : Proc ฮ) โ E แตโ Q โฃโ[ ๐ ] Eโฒ แตโ Q
      _แตแถโ_ : โ {P R Rโฒ} {a : Actionแต ฮ} {aโฒ : Actionแถ ฮ} {E : P โ[ a แต - _ ]โ R} {Eโฒ : P โ[ aโฒ แถ - _ ]โ Rโฒ} โ
              E โฃโ[ แตโแถ ] Eโฒ โ (Q : Proc ฮ) โ E แตโ Q โฃโ[ แตโแถ ] Eโฒ แถโ Q
      _แถแตโ_ : โ {P R Rโฒ} {a : Actionแถ ฮ} {aโฒ : Actionแต ฮ} {E : P โ[ a แถ - _ ]โ R} {Eโฒ : P โ[ aโฒ แต - _ ]โ Rโฒ} โ
              E โฃโ[ แถโแต ] Eโฒ โ (Q : Proc ฮ) โ E แถโ Q โฃโ[ แถโแต ] Eโฒ แตโ Q
      _แถแถโ_ : โ {P R Rโฒ} {a aโฒ : Actionแถ ฮ} {E : P โ[ a แถ - _ ]โ R} {Eโฒ : P โ[ aโฒ แถ - _ ]โ Rโฒ} โ
              E โฃโ[ แถโแถ ] Eโฒ โ (Q : Proc ฮ) โ E แถโ Q โฃโ[ แถโแถ ] Eโฒ แถโ Q
      _แตแตโ_ : โ {P R Rโฒ} {E : P โ[ ฯ แถ - _ ]โ R} {Eโฒ : P โ[ ฯ แถ - _ ]โ Rโฒ} โ
              E โฃโ[ แตโแต ] Eโฒ โ (Q : Proc ฮ) โ E แถโ Q โฃโ[ แตโแต ] Eโฒ แถโ Q
      _โโข_ : โ {x y u z P Q R Rโฒ S Sโฒ} {E : P โ[ x โข แต - _ ]โ R} {Eโฒ : P โ[ u โข แต - _ ]โ Rโฒ}
             {F : Q โ[ โข x โฉ y โช แถ - _ ]โ S} {Fโฒ : Q โ[ โข u โฉ z โช แถ - _ ]โ Sโฒ} โ
             E โฃโ[ แตโแต ] Eโฒ โ F โฃโ[ แถโแถ ] Fโฒ โ E โโข F โฃโ[ แถโแถ ] Eโฒ โโข Fโฒ
      _โโขแตฅ_ : โ {x u y P Q R Rโฒ S Sโฒ} {E : P โ[ x โข แต - _ ]โ R} {Eโฒ : P โ[ u โข แต - _ ]โ Rโฒ}
             {F : Q โ[ โข x โฉ y โช แถ - _ ]โ S} {Fโฒ : Q โ[ (โข u) แต - _ ]โ Sโฒ} โ
             E โฃโ[ แตโแต ] Eโฒ โ F โฃโ[ แถโแต ] Fโฒ โ E โโข F โฃโ[ แถโแถ ] Eโฒ โแตฅ Fโฒ
      _โแตฅโข_ : โ {x u y P Q R Rโฒ S Sโฒ} {E : P โ[ x โข แต - _ ]โ R} {Eโฒ : P โ[ u โข แต - _ ]โ Rโฒ}
             {F : Q โ[ (โข x) แต - _ ]โ S} {Fโฒ : Q โ[ โข u โฉ y โช แถ - _ ]โ Sโฒ} โ
             E โฃโ[ แตโแต ] Eโฒ โ F โฃโ[ แตโแถ ] Fโฒ โ E โแตฅ F โฃโ[ แถโแถ ] Eโฒ โโข Fโฒ
      _โแตฅ_ : โ {x u P Q R Rโฒ S Sโฒ} {E : P โ[ x โข แต - _ ]โ R} {Eโฒ : P โ[ u โข แต - _ ]โ Rโฒ}
             {F : Q โ[ (โข x) แต - _ ]โ S} {Fโฒ : Q โ[ (โข u) แต - _ ]โ Sโฒ} โ
             E โฃโ[ แตโแต ] Eโฒ โ F โฃโ[ หฃโหฃ ] Fโฒ โ E โแตฅ F โฃโ[ แถโแถ ] Eโฒ โแตฅ Fโฒ
      -- TODO: give this a better name.
      _โแตฅโฒ_ : โ {x u P Q R Rโฒ S Sโฒ} {E : P โ[ x โข แต - _ ]โ R} {Eโฒ : P โ[ u โข แต - _ ]โ Rโฒ}
             {F : Q โ[ (โข x) แต - _ ]โ S} {Fโฒ : Q โ[ (โข u) แต - _ ]โ Sโฒ} โ
             E โฃโ[ แตโแต ] Eโฒ โ F โฃโ[ แตโแต ] Fโฒ โ E โแตฅ F โฃโ[ แตโแต ] Eโฒ โแตฅ Fโฒ
      ฮฝโข_ : โ {x u P R Rโฒ} {E : P โ[ โข แดบ.suc x โฉ zero โช แถ - _ ]โ R} {Eโฒ : P โ[ โข แดบ.suc u โฉ zero โช แถ - _ ]โ Rโฒ} โ
            E โฃโ[ แถโแถ ] Eโฒ โ ฮฝโข E โฃโ[ หฃโหฃ ] ฮฝโข Eโฒ
      ฮฝโขแต_ : โ {x P R Rโฒ} {a : Actionแต ฮ} {E : P โ[ โข แดบ.suc x โฉ zero โช แถ - _ ]โ R} {Eโฒ : P โ[ (push *) a แต - _ ]โ Rโฒ} โ
            E โฃโ[ แถโแต ] Eโฒ โ ฮฝโข E โฃโ[ แตโแต ] ฮฝแต Eโฒ
      ฮฝโขแถ_ : โ {x P R Rโฒ} {a : Actionแถ ฮ} {E : P โ[ โข แดบ.suc x โฉ zero โช แถ - _ ]โ R} {Eโฒ : P โ[ (push *) a แถ - _ ]โ Rโฒ} โ
            E โฃโ[ แถโแถ ] Eโฒ โ ฮฝโข E โฃโ[ แตโแถ ] ฮฝแถ Eโฒ
      ฮฝแตแต_ : โ {P R Rโฒ} {a aโฒ : Actionแต ฮ} {E : P โ[ (push *) a แต - _ ]โ R} {Eโฒ : P โ[ (push *) aโฒ แต - _ ]โ Rโฒ} โ
            E โฃโ[ แตโแต ] Eโฒ โ ฮฝแต E โฃโ[ แตโแต ] ฮฝแต Eโฒ
      ฮฝหฃหฃ_ : โ {P R Rโฒ} {x u : Name ฮ} {E : P โ[ (โข (push *) x) แต - _ ]โ R} {Eโฒ : P โ[ (โข (push *) u) แต - _ ]โ Rโฒ} โ
            E โฃโ[ หฃโหฃ ] Eโฒ โ ฮฝแต E โฃโ[ หฃโหฃ ] ฮฝแต Eโฒ
      ฮฝแตแถ_ : โ {P R Rโฒ} {a : Actionแต ฮ} {aโฒ : Actionแถ ฮ} {E : P โ[ (push *) a แต - _ ]โ R} {Eโฒ : P โ[ (push *) aโฒ แถ - _ ]โ Rโฒ} โ
            E โฃโ[ แตโแถ ] Eโฒ โ ฮฝแต E โฃโ[ แตโแถ ] ฮฝแถ Eโฒ
      ฮฝแถแต_ : โ {P R Rโฒ} {a : Actionแถ ฮ} {aโฒ : Actionแต ฮ} {E : P โ[ (push *) a แถ - _ ]โ R} {Eโฒ : P โ[ (push *) aโฒ แต - _ ]โ Rโฒ} โ
            E โฃโ[ แถโแต ] Eโฒ โ ฮฝแถ E โฃโ[ แถโแต ] ฮฝแต Eโฒ
      ฮฝแถแถ_ : โ {P R Rโฒ} {a aโฒ : Actionแถ ฮ} {E : P โ[ (push *) a แถ - _ ]โ R} {Eโฒ : P โ[ (push *) aโฒ แถ - _ ]โ Rโฒ} โ
            E โฃโ[ แถโแถ ] Eโฒ โ ฮฝแถ E โฃโ[ แถโแถ ] ฮฝแถ Eโฒ
      ฮฝแตแต_ : โ {P R Rโฒ} {E : P โ[ ฯ แถ - _ ]โ R} {Eโฒ : P โ[ ฯ แถ - _ ]โ Rโฒ} โ E โฃโ[ แตโแต ] Eโฒ โ ฮฝแถ E โฃโ[ แตโแต ] ฮฝแถ Eโฒ
      !_ : โ {P} {a : Action ฮ} {aโฒ : Action ฮ} {๐} {R Rโฒ} {E : P โ ! P โ[ a - _ ]โ R} {Eโฒ : P โ ! P โ[ aโฒ - _ ]โ Rโฒ} โ
           E โฃโ[ ๐ ] Eโฒ โ ! E โฃโ[ ๐ ] ! Eโฒ

   syntax Concur E Eโฒ ๐ = E โฃ[ ๐ ] Eโฒ

   Concur : โ {ฮ} {a aโฒ : Action ฮ} {P R Rโฒ}
            (E : P โ[ a - _ ]โ R) (Eโฒ : P โ[ aโฒ - _ ]โ Rโฒ) โ a แดฌโฃ aโฒ โ Set
   Concur E Eโฒ ๐ = E โฃโ[ ๐ ] Eโฒ โ Eโฒ โฃโ[ แดฌโฃ-sym ๐ ] E

   โฃ-sym : โ {ฮ} {P : Proc ฮ} {a aโฒ : Action ฮ} {๐ : a แดฌโฃ aโฒ} {R Rโฒ} โ
           {E : P โ[ a - _ ]โ R} {Eโฒ : P โ[ aโฒ - _ ]โ Rโฒ} โ E โฃ[ ๐ ] Eโฒ โ Eโฒ โฃ[ แดฌโฃ-sym ๐ ] E
   โฃ-sym (injโ ๐ธ) = injโ (subst (Concurโ _ _) (sym (แดฌโฃ-sym-involutive _)) ๐ธ)
   โฃ-sym (injโ ๐ธ) = injโ ๐ธ

   -- The type of the symmetric residual of concurrent transitions E and Eโฒ. Because cofinality of action
   -- residuals isn't baked in, need to coerce targets of E/Eโฒ and Eโฒ/E to the same type.
   record Deltaโฒ {ฮ P} {a aโฒ : Action ฮ} (๐ : a แดฌโฃ aโฒ) {R Rโฒ}
                (E : P โ[ a - _ ]โ R) (Eโฒ : P โ[ aโฒ - _ ]โ Rโฒ) : Set where
      constructor Delta
      aโฒ/a = ฯโ (แดฌโ ๐)
      a/aโฒ = ฯโ (แดฌโ ๐)
      field
         {S Sโฒ} : _
         Eโฒ/E : R โ[ aโฒ/a - _ ]โ S
         E/Eโฒ : Rโฒ โ[ a/aโฒ - _ ]โ Sโฒ

   infixl 5 Delta
   syntax Delta E Eโฒ = E แตฮ Eโฒ
   syntax Deltaโฒ ๐ E Eโฒ = E ฮโฒ[ ๐ ] Eโฒ

   open import Ren.Properties
   open Deltaโฒ

   -- The symmetric residual (Eโฒ/E , E/Eโฒ). The paper defines the residual using E and Eโฒ, with E โฃ Eโฒ
   -- implicit; here we work directly with the proof of E โฃ Eโฒ and leave E and Eโฒ implicit.
   โโ : โ {ฮ P} {a aโฒ : Action ฮ} {๐ : a แดฌโฃ aโฒ} {R Rโฒ} {E : P โ[ a - _ ]โ R} {Eโฒ : P โ[ aโฒ - _ ]โ Rโฒ} โ
        E โฃโ[ ๐ ] Eโฒ โ E ฮโฒ[ ๐ ] Eโฒ
   โโ (E แตโแต F) = target E โแต (push *แต) F แตฮ (push *แต) E แตโ target F
   โโ (E แตโแถ F) = target E โแถ (push *แถ) F แตฮ E แตโ target F
   โโ (E แถโแต F) = target E โแต F แตฮ (push *แถ) E แถโ target F
   โโ (E แถโแถ F) = target E โแถ F แตฮ E แถโ target F
   โโ (_โโขแต_ {y = y} {a = a} ๐ธ F) with (pop y *แต) (E/Eโฒ (โโ ๐ธ))
   ... | pop-y*E/Eโฒ rewrite popโpush y a = Eโฒ/E (โโ ๐ธ) โโข (push *แถ) F แตฮ pop-y*E/Eโฒ แตโ target F
   โโ (_โโขแถ_ {y = y} {a = a} ๐ธ F) with (pop y *แถ) (E/Eโฒ (โโ ๐ธ))
   ... | pop-y*E/Eโฒ rewrite popโpush y a = Eโฒ/E (โโ ๐ธ) โโข F แตฮ pop-y*E/Eโฒ แถโ target F
   โโ (_แตโโข_ {y = y} E ๐น) = (push *แต) E แต.โโข Eโฒ/E (โโ ๐น) แตฮ (pop y *) (target E) โแต E/Eโฒ (โโ ๐น)
   โโ (_แถโโข_ {y = y} E ๐น) = E โโข Eโฒ/E (โโ ๐น) แตฮ (pop y *) (target E) โแถ E/Eโฒ (โโ ๐น)
   โโ (๐ธ โแตฅแต F) = Eโฒ/E (โโ ๐ธ) โแตฅ (push *แต) F แตฮ ฮฝแต (E/Eโฒ (โโ ๐ธ) แตโ target F)
   โโ (๐ธ โแตฅแถ F) = Eโฒ/E (โโ ๐ธ) โแตฅ F แตฮ ฮฝแถ (E/Eโฒ (โโ ๐ธ) แถโ target F)
   โโ (_แตโแตฅ_ {๐ = หฃโหฃ} E ๐น) with (push *แต) E
   ... | push*E = push*E โโข Eโฒ/E (โโ ๐น) แตฮ ฮฝโข (target E โแถ E/Eโฒ (โโ ๐น))
   โโ (_แตโแตฅ_ {๐ = แตโแต} E ๐น) = (push *แต) E โแตฅ Eโฒ/E (โโ ๐น) แตฮ ฮฝแต (target E โแต E/Eโฒ (โโ ๐น))
   โโ (E แถโแตฅ ๐น) = E โแตฅ Eโฒ/E (โโ ๐น) แตฮ ฮฝแถ (target E โแถ E/Eโฒ (โโ ๐น))
   โโ (_โแตแต_ {๐ = หฃโหฃ} P ๐น) = (push *) P โแถ Eโฒ/E (โโ ๐น) แตฮ (push *) P โแถ E/Eโฒ (โโ ๐น)
   โโ (_โแตแต_ {๐ = แตโแต} P ๐น) = (push *) P โแต Eโฒ/E (โโ ๐น) แตฮ (push *) P โแต E/Eโฒ (โโ ๐น)
   โโ (P โแตแถ ๐น) = (push *) P โแถ Eโฒ/E (โโ ๐น) แตฮ P โแต E/Eโฒ (โโ ๐น)
   โโ (P โแถแต ๐น) = P โแต Eโฒ/E (โโ ๐น) แตฮ (push *) P โแถ E/Eโฒ (โโ ๐น)
   โโ (P โแถแถ ๐น) = P โแถ Eโฒ/E (โโ ๐น) แตฮ P โแถ E/Eโฒ (โโ ๐น)
   โโ (P โแตแต ๐น) = P โแถ Eโฒ/E (โโ ๐น) แตฮ P โแถ E/Eโฒ (โโ ๐น)
   โโ (_แตแตโ_ {๐ = หฃโหฃ} ๐ธ Q) = Eโฒ/E (โโ ๐ธ) แถโ (push *) Q แตฮ E/Eโฒ (โโ ๐ธ) แถโ (push *) Q
   โโ (_แตแตโ_ {๐ = แตโแต} ๐ธ Q) = Eโฒ/E (โโ ๐ธ) แตโ (push *) Q แตฮ E/Eโฒ (โโ ๐ธ) แตโ (push *) Q
   โโ (๐ธ แตแถโ Q) = Eโฒ/E (โโ ๐ธ) แถโ (push *) Q แตฮ E/Eโฒ (โโ ๐ธ) แตโ Q
   โโ (๐ธ แถแตโ Q) = Eโฒ/E (โโ ๐ธ) แตโ Q แตฮ E/Eโฒ (โโ ๐ธ) แถโ (push *) Q
   โโ (๐ธ แถแถโ Q) = Eโฒ/E (โโ ๐ธ) แถโ Q แตฮ E/Eโฒ (โโ ๐ธ) แถโ Q
   โโ (๐ธ แตแตโ Q) = Eโฒ/E (โโ ๐ธ) แถโ Q แตฮ E/Eโฒ (โโ ๐ธ) แถโ Q
   โโ (๐ธ โโ F) = Eโฒ/E (โโ ๐ธ) แตฮ E/Eโฒ (โโ ๐ธ)
   โโ (_โโข_ {x = x} {y} {u} {z} ๐ธ ๐น) with (pop y *แต) (Eโฒ/E (โโ ๐ธ)) | (pop z *แต) (E/Eโฒ (โโ ๐ธ))
   ... | pop-y*Eโฒ/E | pop-z*E/Eโฒ rewrite popโpush u y | popโpush x z = pop-y*Eโฒ/E โโข Eโฒ/E (โโ ๐น) แตฮ pop-z*E/Eโฒ โโข E/Eโฒ (โโ ๐น)
   โโ (_โโขแตฅ_ {u = u} {y} ๐ธ ๐น) with (pop y *แต) (Eโฒ/E (โโ ๐ธ))
   ... | pop-y*Eโฒ/E rewrite popโpush u y = pop-y*Eโฒ/E โแตฅ Eโฒ/E (โโ ๐น) แตฮ ฮฝแถ (E/Eโฒ (โโ ๐ธ) โโข E/Eโฒ (โโ ๐น))
   โโ (_โแตฅโข_ {x = x} {y = y} ๐ธ ๐น) with (pop y *แต) (E/Eโฒ (โโ ๐ธ))
   ... | pop-y*E/Eโฒ rewrite popโpush x y = ฮฝแถ (Eโฒ/E (โโ ๐ธ) โโข Eโฒ/E (โโ ๐น)) แตฮ pop-y*E/Eโฒ โแตฅ E/Eโฒ (โโ ๐น)
   โโ (๐ธ โแตฅ ๐น) = ฮฝแถ (Eโฒ/E (โโ ๐ธ) โโข Eโฒ/E (โโ ๐น)) แตฮ ฮฝแถ (E/Eโฒ (โโ ๐ธ) โโข E/Eโฒ (โโ ๐น))
   โโ (๐ธ โแตฅโฒ ๐น) = ฮฝแถ (Eโฒ/E (โโ ๐ธ) โแตฅ Eโฒ/E (โโ ๐น)) แตฮ ฮฝแถ (E/Eโฒ (โโ ๐ธ) โแตฅ E/Eโฒ (โโ ๐น))
   โโ (ฮฝโข ๐ธ) = Eโฒ/E (โโ ๐ธ) แตฮ E/Eโฒ (โโ ๐ธ)
   โโ (ฮฝโขแต_ {x = x} {a = a} ๐ธ) with (swap *แถ) (E/Eโฒ (โโ ๐ธ))
   ... | swap*E/Eโฒ = Eโฒ/E (โโ ๐ธ) แตฮ ฮฝโข swap*E/Eโฒ
   โโ (ฮฝโขแถ ๐ธ) = Eโฒ/E (โโ ๐ธ) แตฮ ฮฝโข E/Eโฒ (โโ ๐ธ)
   โโ (ฮฝแตแต_ {a = x โข} {a} ๐ธ) with (swap *แต) (E/Eโฒ (โโ ๐ธ)) | (swap *แต) (Eโฒ/E (โโ ๐ธ))
   ... | swap*E/Eโฒ | swap*Eโฒ/E rewrite swapโpushโpush x | swapโpushโpush a = ฮฝแต swap*Eโฒ/E แตฮ ฮฝแต swap*E/Eโฒ
   โโ (ฮฝแตแต_ {a = โข x} {u โข} ๐ธ) with (swap *แต) (E/Eโฒ (โโ ๐ธ)) | (swap *แต) (Eโฒ/E (โโ ๐ธ))
   ... | swap*E/Eโฒ | swap*Eโฒ/E rewrite swapโpushโpush x | swapโpushโpush u = ฮฝแต swap*Eโฒ/E แตฮ ฮฝแต swap*E/Eโฒ
   โโ (ฮฝแตแต_ {a = โข x} {โข u} ๐ธ) with (swap *แต) (E/Eโฒ (โโ ๐ธ)) | (swap *แต) (Eโฒ/E (โโ ๐ธ))
   ... | swap*E/Eโฒ | swap*Eโฒ/E = ฮฝแต swap*Eโฒ/E แตฮ ฮฝแต swap*E/Eโฒ
   โโ (ฮฝหฃหฃ_ {x = x} {u} ๐ธ) with (swap *แถ) (E/Eโฒ (โโ ๐ธ)) | (swap *แถ) (Eโฒ/E (โโ ๐ธ))
   ... | swap*E/Eโฒ | swap*Eโฒ/E = ฮฝแถ swap*Eโฒ/E แตฮ ฮฝแถ swap*E/Eโฒ
   โโ (ฮฝแตแถ_ {aโฒ = aโฒ} ๐ธ) with (swap *แถ) (Eโฒ/E (โโ ๐ธ))
   ... | swap*Eโฒ/E rewrite swapโpushโpush aโฒ = ฮฝแถ swap*Eโฒ/E แตฮ ฮฝแต E/Eโฒ (โโ ๐ธ)
   โโ (ฮฝแถแต_ {a = a} ๐ธ) with (swap *แถ) (E/Eโฒ (โโ ๐ธ))
   ... | swap*E/Eโฒ rewrite swapโpushโpush a = ฮฝแต Eโฒ/E (โโ ๐ธ) แตฮ ฮฝแถ swap*E/Eโฒ
   โโ (ฮฝแถแถ ๐ธ) = ฮฝแถ (Eโฒ/E (โโ ๐ธ)) แตฮ ฮฝแถ (E/Eโฒ (โโ ๐ธ))
   โโ (ฮฝแตแต ๐ธ) = ฮฝแถ (Eโฒ/E (โโ ๐ธ)) แตฮ ฮฝแถ (E/Eโฒ (โโ ๐ธ))
   โโ (! ๐ธ) = Eโฒ/E (โโ ๐ธ) แตฮ E/Eโฒ (โโ ๐ธ)

   -- Now symmetrise.
   โ : โ {ฮ P} {a aโฒ : Action ฮ} {๐ : a แดฌโฃ aโฒ} {R Rโฒ} {E : P โ[ a - _ ]โ R} {Eโฒ : P โ[ aโฒ - _ ]โ Rโฒ} โ
       E โฃ[ ๐ ] Eโฒ โ E ฮโฒ[ ๐ ] Eโฒ
   โ (injโ ๐ธ) = โโ ๐ธ
   โ {๐ = ๐} (injโ ๐ธโฒ) with โโ ๐ธโฒ
   โ {๐ = หฃโหฃ} (injโ ๐ธโฒ) | E/Eโฒ แตฮ Eโฒ/E = Eโฒ/E แตฮ E/Eโฒ
   โ {๐ = แตโแต} (injโ ๐ธโฒ) | E/Eโฒ แตฮ Eโฒ/E = Eโฒ/E แตฮ E/Eโฒ
   โ {๐ = แตโแถ} (injโ ๐ธโฒ) | E/Eโฒ แตฮ Eโฒ/E = Eโฒ/E แตฮ E/Eโฒ
   โ {๐ = แถโแต} (injโ ๐ธโฒ) | E/Eโฒ แตฮ Eโฒ/E = Eโฒ/E แตฮ E/Eโฒ
   โ {๐ = แถโแถ} (injโ ๐ธโฒ) | E/Eโฒ แตฮ Eโฒ/E = Eโฒ/E แตฮ E/Eโฒ
   โ {๐ = แตโแต} (injโ ๐ธโฒ) | E/Eโฒ แตฮ Eโฒ/E = Eโฒ/E แตฮ E/Eโฒ

   module Properties {ฮ P} {a aโฒ : Action ฮ} {๐ : a แดฌโฃ aโฒ} {R Rโฒ} {E : P โ[ a - _ ]โ R} {Eโฒ : P โ[ aโฒ - _ ]โ Rโฒ}
      (๐ธ : E โฃ[ ๐ ] Eโฒ) where

      postulate
         โ-preserves-sym : Eโฒ/E (โ ๐ธ) โ E/Eโฒ (โ (โฃ-sym ๐ธ))
         โ-preserves-symโฒ : Sโฒ (โ ๐ธ) โก S (โ (โฃ-sym ๐ธ))
